git:
  depth: 200

language: cpp

compiler:
  - gcc
  - clang

os: 
  - linux
  - osx

env:
  global:
    - GCC_VERSION="4.9"
    - RUN_VALGRIND=1
    - secure: "a7ElJhM8X3f7Pzzm262g53XMgTESjC3G01iWkusr3uxiwfEpjDkNyU0HsA+m3eSZOF6pNDswFvEkkvjB3VIiLbtM+KoT0osK3fmm1Mp6s5/Ty7UGiRbQOGIIeWi88n/5/xpRczXyoKRMX+rE+H/BoK4C1uGxkUm99+kdQ6zMhgco8="
    - secure: "jq8/7MDVz6pZgu62Pfc+/MYlXoMQaSoOHITGZlS0JR71HM1zsMHyRtHbBtW2nuh2a82LmERuNH4iy4oeLJKO8sc6Wj3/glJhnefSd+KS03AEnPNPWfNZBC+GwxXoFaY0imE41CXtb2SzSzgzdh+uDBiPkgRXBzN4zzdV34OOpfc="
    - REPO_PATH="https://headmyshoulder:${GIT_TOKEN}@github.com/Ambrosys/gpcxx.git"

  matrix:
    - BUILD_TYPE=Debug
    - BUILD_TYPE=Release

matrix:
  exclude:
    - os: osx   # For now disable gcc on osx as g++4.8 is not yet available
      compiler: gcc

    
    
before_install:
  - export GPCXX_ROOT=`pwd`
  - cd $GPCXX_ROOT
  - if [ "$CXX" == "g++" ] && [ "$BUILD_TYPE" == "Debug" ] && [ "$TRAVIS_BRANCH" == "master" ]; then export MASTER_BUILD=1; fi
  - if [ "$CXX" == "g++" ] && [ "$BUILD_TYPE" == "Debug" ]; then export COVERALLS_BUILD=1; fi
  - if [ -n "$MASTER_BUILD" ]; then echo "This is the Master build"; fi
  - if [ -n "$COVERALLS_BUILD" ]; then echo "This is the coverall build"; fi
  - if [ -n "$RUN_VALGRIND" ]; then echo "Running valgrind"; fi
  - .ci/setup_compiler.sh
  - .ci/init_thirdparty.sh
  # some variables need to be set here
  - export BOOST_ROOT="$GPCXX_ROOT/third_party/boost"



install:
  - cd $GPCXX_ROOT
  - mkdir build

script:
  - cd $GPCXX_ROOT
  - if [ -z "$COVERITY_PUSH" ]; then .ci/build_and_test.sh; fi
  
after_success:
  - cd $GPCXX_ROOT
  - if [ -n "$MASTER_BUILD" ]; then .ci/commit_coverity_scan.sh; fi
  # - cd $GPCXX_ROOT
  # - if [ -n "$MASTER_BUILD" ]; then .ci/build_docs.sh; fi
  - cd $GPCXX_ROOT
  - if [ -n "$COVERALLS_BUILD" ]; then .ci/commit_coveralls.sh; fi 




addons:
  coverity_scan:
    project:
      name: "Ambrosys/gpcxx"
      description: "Build submitted via Travis CI"
    notification_email: karsten.ahnert@gmx.de
    build_command_prepend: "cd build && cmake .. -DGPCXX_BUILD_DOCS=OFF"
    build_command:   "make"
    branch_pattern: coverity_scan
