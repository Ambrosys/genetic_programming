[section Tree]

This concepts specifies the interface for trees.

[heading Description]

The tree concept.

[heading Refinement of]

* DefaultConstructable
* CopyConstructable
* MoveConstructable


[heading Associated types]

*  '''<para>'''[*value_type]'''</para>'''
'''<para>'''`Tree::state_type`'''</para>'''
'''<para>'''The value_type of the nodes of the tree'''</para>'''


[heading Notation]

[variablelist 
  [[`Tree`] [A type that is a model of Tree]]
  [[`tree`] [An object of type `Tree`]]
]

[heading Valid Expressions]

[table
  [[Name] [Expression] [Type] [Semantics]]
  [[Get cursor to root node.] [`stepper.root()`] [`Cursor`] [Returns a cursor to the root node of the tree.]]
  [[Get const cursor to root node.] [`stepper.root()`] [`ConstCursor`] [Returns a const cursor to the root node of the tree.]]
  [[Get const cursor to root node.] [`stepper.croot()`] [`ConstCursor`] [Returns a const cursor to the root node of the tree.]]
  [[tba.] [`stepper.rank_is(i)`] [`Cursor`] [tba.]]
  [[tba.] [`stepper.rank_is(i)`] [`ConstCursor`] [tba.]]
  [[tba.] [`stepper.insert_below(c,n)`] [`Cursor`] [tba.]]
  [[tba.] [`stepper.insert_below(c,n)`] [`Cursor`] [tba.]]
  [[tba.] [`stepper.assign(o)`] [`void`] [tba.]]
  [[tba.] [`stepper.erase(c)`] [`void`] [tba.]]
  [[tba.] [`stepper.clear()`] [`void`] [tba.]]
  [[tba.] [`stepper.swap(t2)`] [`void`] [tba.]]
  [[tba.] [`stepper.swap_subtrees(c,t2,o)`] [`void`] [tba.]]
]

[heading Models]

* `basic_tree`
* `intrusice_tree`

[heading See also]

* __cursor_concept
* __tree_node_concept

[endsect]
